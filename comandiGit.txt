git add .
git status
git rm -f file.txt 
git rm --cached file.txt

git config --global user.email "<email>"
git config --global user.name "<name>"
git config --help

git commit -m "<messaggio>"
git commit -a
git log
git log --oneline
# nuovo commento del branch dirs

git checkout <id da git log>
git checkout master

git revert <id da git log>

git reset # muove il branch
git reset --hard <id del commit> # porta il branch master al commit scelto: i commit dopo vengono garbage collected
# HEAD segue il branch durante il reset
git reset --mixed <id del commit> # sposta il branch ma copia dati solo nell'Index
# utile per osservare le differenze con git diff ?
git reset --soft <id del commit> # sposta il branch ma non copia dati in Working Area e Index
git reset HEAD # per togliere tutte le modifiche da Index

git rm -f # cancella file da index e WA
git rm -r --cached . # da fare dopo creazione gitignore a metÃ  progetto

git branch # elenco dei branch
git branch nomebranch
git checkout nomebranch

# da master
git merge nomebranch
# in caso diu conflitto
# una volta risolto il conflitto, fare git add sul file esplicitato
git add nomefile
# committare ==> conflitto risolto
git commit | aggiungere solo commit senza messaggi per concludere il merge

# detached HEAD
git checkout <id commit>
git branch
gid add .
git commit -m "mex"
# HEAD si muove, master no
# per salvare i commit dal garbage collector
git checkout <id commmit>
git branch nomebranch
git checkout master
# rimane traccia dei commit nuovi come branch

# carica su GitHub
git remote add origin https://github.com/Xerses7/CorsoGit.git
git push -u origin master

# clona il repo
git clone https://github.com/Xerses7/CorsoGit.git

# prendi una versione del repo modificata e fai merge
git pull origin master

# Spostare progetto a dir padre
1. Creare una copia della dir contenente il progetto al suo interno
2. muovere tutti i file nella nuova dir **** con 'git mv file destinazione' ****
3. git add e committare
4. portare le dir contenute nel parent nel repo
5. git add .
6. commit
7. rinominare / spostare la dir del progetto alla destinazione voluta

# trova le differenze tra Working Area e Index
git diff
# trova le differenze tra Index e repo
git diff --cached

# rinominare file
mv file2.txt prova.txt
git status
# riporta il file "cancellato" e l'altro unstaged
git add file2.txt
git add prova.txt
git status
# git riconosce il renaming

# sostituto per il precedente
git mv prova.txt testo.txt

git stash --include-untracked
git stash list
git stash apply

# per portare la versione di un file da repo a Working area e Index 
git checkout HEAD menu.txt

